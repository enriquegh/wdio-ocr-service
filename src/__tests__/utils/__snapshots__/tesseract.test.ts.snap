// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils - tesseract getNodeOcrData should be able to parse the node OCR data 1`] = `
Object {
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Username",
    },
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Password",
    },
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "LOGIN",
    },
  ],
  "text": "Username

Password

 

 

LOGIN

 

 
",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Username",
      "wc": 0.9,
    },
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Password",
      "wc": 0.9,
    },
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "LOGIN",
      "wc": 0.9,
    },
  ],
}
`;

exports[`utils - tesseract getSystemOcrData should be able to parse the system OCR data 1`] = `
Object {
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Username",
    },
    Object {
      "bbox": Object {
        "bottom": 480,
        "left": 83,
        "right": 237,
        "top": 454,
      },
      "text": "Password",
    },
    Object {
      "bbox": Object {
        "bottom": 695,
        "left": 359,
        "right": 467,
        "top": 669,
      },
      "text": "LOGIN",
    },
  ],
  "text": "
                
Username

Password

LOGIN

        ",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 352,
        "left": 83,
        "right": 248,
        "top": 326,
      },
      "text": "Username",
      "wc": 0.96,
    },
    Object {
      "bbox": Object {
        "bottom": 480,
        "left": 83,
        "right": 237,
        "top": 454,
      },
      "text": "Password",
      "wc": 0.96,
    },
    Object {
      "bbox": Object {
        "bottom": 695,
        "left": 359,
        "right": 467,
        "top": 669,
      },
      "text": "LOGIN",
      "wc": 0.95,
    },
    Object {
      "bbox": Object {
        "bottom": 697,
        "left": 360,
        "right": 470,
        "top": 670,
      },
      "text": "",
      "wc": 0,
    },
    Object {
      "bbox": Object {
        "bottom": 697,
        "left": 360,
        "right": 470,
        "top": 670,
      },
      "text": "",
      "wc": 0,
    },
  ],
}
`;

exports[`utils - tesseract isTesseractAvailable should return false with a default non existing custom command 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "custom-tesseract-arg --version",
    ],
  ],
  "results": Array [
    Object {
      "type": "throw",
      "value": [Error],
    },
  ],
}
`;

exports[`utils - tesseract isTesseractAvailable should return true with a default call 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "tesseract --version",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
