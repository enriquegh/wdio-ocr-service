// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils - ocrGetData should return Node ocrData for a cropped Android image 1`] = `
Object {
  "dpr": 2,
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 400,
        "left": 100,
        "right": 300,
        "top": 200,
      },
      "text": "line string",
    },
  ],
  "text": "ocrData",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 800,
        "left": 500,
        "right": 700,
        "top": 600,
      },
      "text": "word string",
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData for a cropped Android image 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "bottom": 40,
        "filePath": "ocrImagesPath/android-1466424490000.png",
        "height": 400,
        "left": 10,
        "right": 30,
        "top": 20,
        "width": 200,
      },
    ],
    Array [
      Object {
        "filePath": "ocrImagesPath/android-1466424490000.png",
        "height": 400,
        "lines": Array [
          Object {
            "bbox": Object {
              "bottom": 400,
              "left": 100,
              "right": 300,
              "top": 200,
            },
            "text": "line string",
          },
        ],
        "width": 200,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData for a cropped iOS image 1`] = `
Object {
  "dpr": 2,
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 400,
        "left": 100,
        "right": 300,
        "top": 200,
      },
      "text": "line string",
    },
  ],
  "text": "ocrData",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 800,
        "left": 500,
        "right": 700,
        "top": 600,
      },
      "text": "word string",
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData for a cropped iOS image 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "bottom": 40,
        "filePath": "ocrImagesPath/ios-1466424490000.png",
        "height": 400,
        "left": 10,
        "right": 30,
        "top": 20,
        "width": 200,
      },
    ],
    Array [
      Object {
        "filePath": "ocrImagesPath/ios-1466424490000.png",
        "height": 400,
        "lines": Array [
          Object {
            "bbox": Object {
              "bottom": 400,
              "left": 100,
              "right": 300,
              "top": 200,
            },
            "text": "line string",
          },
        ],
        "width": 200,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData with default options 1`] = `
Object {
  "dpr": 2,
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 4,
        "left": 1,
        "right": 3,
        "top": 2,
      },
      "text": "line string",
    },
  ],
  "text": "ocrData",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 8,
        "left": 5,
        "right": 7,
        "top": 6,
      },
      "text": "word string",
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData with default options 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "filePath": "ocrImagesPath/android-1466424490000.png",
        "height": 400,
        "lines": Array [
          Object {
            "bbox": Object {
              "bottom": 4,
              "left": 1,
              "right": 3,
              "top": 2,
            },
            "text": "line string",
          },
        ],
        "width": 200,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`utils - ocrGetData should return Node ocrData with default options 3`] = `
Array [
  Array [
    "Using NodeJS version of Tesseract",
  ],
  Array [
    "It took '0.000s' to process the image.",
  ],
  Array [
    "The following text was found through OCR:

ocrData",
  ],
  Array [
    "OCR Image with found text can be found here:

ocrImagesPath/android-1466424490000.png",
  ],
]
`;

exports[`utils - ocrGetData should return System ocrData with default options 1`] = `
Object {
  "dpr": 2,
  "lines": Array [
    Object {
      "bbox": Object {
        "bottom": 4,
        "left": 1,
        "right": 3,
        "top": 2,
      },
      "text": "line string",
    },
  ],
  "text": "ocrData",
  "words": Array [
    Object {
      "bbox": Object {
        "bottom": 8,
        "left": 5,
        "right": 7,
        "top": 6,
      },
      "text": "word string",
    },
  ],
}
`;

exports[`utils - ocrGetData should return System ocrData with default options 2`] = `
Array [
  Array [
    "Using system installed version of Tesseract",
  ],
  Array [
    "It took '0.000s' to process the image.",
  ],
  Array [
    "The following text was found through OCR:

ocrData",
  ],
  Array [
    "OCR Image with found text can be found here:

ocrImagesPath/android-1466424490000.png",
  ],
]
`;
